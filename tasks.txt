Беленький Александр Сергеевич
a.belenkiy@urancompany.com

1. Сессии, кеши, сложные формы

Написать простейшую форму логина по емейлу/паролю с обработкой данных. Сделать и вывод формы, и ее
обработку, и запись в сессию успешности логина и перенаправление на внутреннюю часть сайта - в одном файле.
“Правильной парой” для примера будет только test@example.com и пароль testtest (т.е. не надо базы данных реальной).
Учесть защиту от “силового подбора” пароля с помощью любого кеша (т.е. если на один емейл идут разные запросы с разными
паролями даже с разных айпи - блокировать эти боты еще до “подключения к базе”), выдавать разные формы подтверждения
“правдивости” в зависимости от количество неудачных попыток (капча, смс, емейл подтверждение).


2. Трай, кетч, простые классы
Напишите класс для работы с изображениями и методом Image::resize(max_width, max_height)

Image::resize(100, 200) должно уменьшать любую картинку в данные размеры, если картинка больше - то вписывать в эти
параметры большую часть, сохраняя пропорции картинки, так
Картинка: 300х210 => 100x70
400x600=>100x150
400x800=>100x200
400x1000=>80x200
200x500=>80x200

При слишком большом размере файла или его “битости” возвращать ошибку и рисовать картинку “заглушку”
(т.е. картинку размера 100х200 с надписью “ошибка обработки”). Все варианты картинок сделать с тестами.


3. Трейты, интерфейсы, наследование классов
Напишите два класса для работы админки, один - список пользователей форума, а второй - список сообщений.
Они оба аскетичны (т.е. достаточно пары полей) и наследуют один общий класс “список объектов”, у которого
одна функция getList() - в зависимости от параметров запроса дает первые Н объектов для таблицы в админке.
Объекты можно сортировать и перебирать “по страницам”.


4. Code review

/*
 * опишите что этот запрос делает, и можно ли его улучшить
 * заметьте - это Postgresql - предположительно не знакомая вам база данных и вам нужно почитать документацию
 * прежде чем ответить
 */
$sql = 'UPDATE reviews AS r SET (status, chtime)=(1, NOW())
        WHERE (SELECT sub.match
        FROM (SELECT (reviews.*)=(r.*) AS match
        FROM items AS i
        LEFT JOIN reviews ON reviews.id_item = i.id
        WHERE item.id=222) AS sub)';

